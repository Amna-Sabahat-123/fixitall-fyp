<div class="modal fade" id="customerSignupModal" tabindex="-1" aria-labelledby="customerSignupModalLabel"
  aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered modal-custom-width">
    <div class="modal-content p-4">
      <div class="d-flex justify-content-between align-items-center position-relative mb-3">
        <h3 class="text-center mb-0 Our p-0" style="font-size: clamp(20px, 2vw, 35px); color: #4a4a4a; flex-grow: 1;">
          Customer Sign Up
        </h3>
        <button type="button" class="btn" style="font-size: 1.5rem; color: #4a4a4a; padding: 0;"
          data-bs-dismiss="modal">
          <i class="fas fa-times"></i>
        </button>
      </div>

      <!-- Message Area -->
      

      <!-- Signup Form -->
      <form id="customerSignupForm">
        <div class="mb-3">
          <label for="fullName" class="form-label">Full Name</label>
          <input type="text" class="form-control" id="fullName" placeholder="Enter your full name" required
            name="fullName">
        </div>
        <div class="mb-3">
          <label for="email" class="form-label">Email</label>
          <input type="email" class="form-control" id="email" placeholder="Enter your email" required name="email">
        </div>
        <div class="mb-3">
          <label for="phone" class="form-label">Phone</label>
          <input type="tel" class="form-control" id="phone" placeholder="Enter your phone number" required name="phone">
        </div>
        <div class="mb-3">
          <label for="password" class="form-label">Password</label>
          <input type="password" class="form-control" id="password" placeholder="Enter your password" required
            name="password">
        </div>
        <div class="mb-3">
          <label for="confirmPassword" class="form-label">Confirm Password</label>
          <input type="password" class="form-control" id="confirmPassword" placeholder="Confirm your password" required>
        </div>
        <div class="mb-3">
          <label for="location" class="form-label">Location</label>
          <input type="text" class="form-control" id="location" placeholder="Enter your location" required
            name="location">
        </div>
        <div class="mb-3 form-check d-flex align-items-center">
          <input type="checkbox" class="form-check-input" id="agreement" required name="agreement">
          <label class="form-check-label" for="agreement">I agree to the
            <a href="#" style="color: #469DCD; text-decoration: underline;" id="termsLink">terms and
              conditions.</a>
          </label>
        </div>

        <button type="submit" class="btn btn-site w-100 mt-2">Create Account</button>
        <div id="signupMessage" class="alert d-none" role="alert"></div>

        <p class="mt-3">Already have an account? <a href="#" id="loginLink">Login</a></p>
      </form>
    </div>
  </div>
</div>

<script>
document.addEventListener("DOMContentLoaded", function () {
  const form = document.getElementById("customerSignupForm");

  if (!form) return;

  form.addEventListener("submit", async function (e) {
    e.preventDefault();

    const msg = document.getElementById("signupMessage");
    msg.classList.add("d-none");

    const password = form.password.value;
    const confirmPassword = document.getElementById("confirmPassword").value;

    if (password !== confirmPassword) {
      msg.textContent = "Passwords do not match.";
      msg.classList.remove("d-none", "alert-success");
      msg.classList.add("alert-danger");
      return;
    }

    const formData = {
      fullName: form.fullName.value,
      email: form.email.value,
      phone: form.phone.value,
      password: form.password.value,
      location: form.location.value,
      agreement: form.agreement.checked,
    };

    // Debugging: Show values in console
    console.log("Form Data to Send:", formData);

    try {
      const response = await fetch("/customers/register", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(formData),
      });

      const data = await response.json();

      if (data.success) {
        window.location.href = "/customers/dashboard";
      } else {
        msg.textContent = data.message || "Something went wrong.";
        msg.classList.remove("d-none", "alert-success");
        msg.classList.add("alert-danger");
      }
    } catch (err) {
      console.error("‚ùå Network/Server Error:", err);
      msg.textContent = "Something went wrong. Please try again.";
      msg.classList.remove("d-none", "alert-success");
      msg.classList.add("alert-danger");
    }
  });
});
</script>
